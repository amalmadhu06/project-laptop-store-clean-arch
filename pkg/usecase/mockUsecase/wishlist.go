// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/amalmadhu06/project-laptop-store-clean-arch/pkg/usecase/interface (interfaces: WishlistUseCase)

// Package mockUsecase is a generated GoMock package.
package mockUsecase

import (
	context "context"
	reflect "reflect"

	model "github.com/amalmadhu06/project-laptop-store-clean-arch/pkg/util/model"
	gomock "github.com/golang/mock/gomock"
)

// MockWishlistUseCase is a mock of WishlistUseCase interface.
type MockWishlistUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockWishlistUseCaseMockRecorder
}

// MockWishlistUseCaseMockRecorder is the mock recorder for MockWishlistUseCase.
type MockWishlistUseCaseMockRecorder struct {
	mock *MockWishlistUseCase
}

// NewMockWishlistUseCase creates a new mock instance.
func NewMockWishlistUseCase(ctrl *gomock.Controller) *MockWishlistUseCase {
	mock := &MockWishlistUseCase{ctrl: ctrl}
	mock.recorder = &MockWishlistUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWishlistUseCase) EXPECT() *MockWishlistUseCaseMockRecorder {
	return m.recorder
}

// AddToWishlist mocks base method.
func (m *MockWishlistUseCase) AddToWishlist(arg0 context.Context, arg1, arg2 int) (model.ViewWishlist, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddToWishlist", arg0, arg1, arg2)
	ret0, _ := ret[0].(model.ViewWishlist)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddToWishlist indicates an expected call of AddToWishlist.
func (mr *MockWishlistUseCaseMockRecorder) AddToWishlist(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddToWishlist", reflect.TypeOf((*MockWishlistUseCase)(nil).AddToWishlist), arg0, arg1, arg2)
}

// EmptyWishlist mocks base method.
func (m *MockWishlistUseCase) EmptyWishlist(arg0 context.Context, arg1 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EmptyWishlist", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// EmptyWishlist indicates an expected call of EmptyWishlist.
func (mr *MockWishlistUseCaseMockRecorder) EmptyWishlist(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EmptyWishlist", reflect.TypeOf((*MockWishlistUseCase)(nil).EmptyWishlist), arg0, arg1)
}

// RemoveFromWishlist mocks base method.
func (m *MockWishlistUseCase) RemoveFromWishlist(arg0 context.Context, arg1, arg2 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveFromWishlist", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveFromWishlist indicates an expected call of RemoveFromWishlist.
func (mr *MockWishlistUseCaseMockRecorder) RemoveFromWishlist(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveFromWishlist", reflect.TypeOf((*MockWishlistUseCase)(nil).RemoveFromWishlist), arg0, arg1, arg2)
}

// ViewWishlist mocks base method.
func (m *MockWishlistUseCase) ViewWishlist(arg0 context.Context, arg1 int) (model.ViewWishlist, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ViewWishlist", arg0, arg1)
	ret0, _ := ret[0].(model.ViewWishlist)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ViewWishlist indicates an expected call of ViewWishlist.
func (mr *MockWishlistUseCaseMockRecorder) ViewWishlist(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ViewWishlist", reflect.TypeOf((*MockWishlistUseCase)(nil).ViewWishlist), arg0, arg1)
}

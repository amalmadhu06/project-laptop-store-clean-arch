// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/amalmadhu06/project-laptop-store-clean-arch/pkg/repository/interface (interfaces: WishlistRepository)

// Package mockWishlist is a generated GoMock package.
package mockWishlist

import (
	context "context"
	reflect "reflect"

	model "github.com/amalmadhu06/project-laptop-store-clean-arch/pkg/util/model"
	gomock "github.com/golang/mock/gomock"
)

// MockWishlistRepository is a mock of WishlistRepository interface.
type MockWishlistRepository struct {
	ctrl     *gomock.Controller
	recorder *MockWishlistRepositoryMockRecorder
}

// MockWishlistRepositoryMockRecorder is the mock recorder for MockWishlistRepository.
type MockWishlistRepositoryMockRecorder struct {
	mock *MockWishlistRepository
}

// NewMockWishlistRepository creates a new mock instance.
func NewMockWishlistRepository(ctrl *gomock.Controller) *MockWishlistRepository {
	mock := &MockWishlistRepository{ctrl: ctrl}
	mock.recorder = &MockWishlistRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWishlistRepository) EXPECT() *MockWishlistRepositoryMockRecorder {
	return m.recorder
}

// AddToWishlist mocks base method.
func (m *MockWishlistRepository) AddToWishlist(arg0 context.Context, arg1, arg2 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddToWishlist", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddToWishlist indicates an expected call of AddToWishlist.
func (mr *MockWishlistRepositoryMockRecorder) AddToWishlist(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddToWishlist", reflect.TypeOf((*MockWishlistRepository)(nil).AddToWishlist), arg0, arg1, arg2)
}

// EmptyWishlist mocks base method.
func (m *MockWishlistRepository) EmptyWishlist(arg0 context.Context, arg1 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EmptyWishlist", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// EmptyWishlist indicates an expected call of EmptyWishlist.
func (mr *MockWishlistRepositoryMockRecorder) EmptyWishlist(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EmptyWishlist", reflect.TypeOf((*MockWishlistRepository)(nil).EmptyWishlist), arg0, arg1)
}

// RemoveFromWishlist mocks base method.
func (m *MockWishlistRepository) RemoveFromWishlist(arg0 context.Context, arg1, arg2 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveFromWishlist", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveFromWishlist indicates an expected call of RemoveFromWishlist.
func (mr *MockWishlistRepositoryMockRecorder) RemoveFromWishlist(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveFromWishlist", reflect.TypeOf((*MockWishlistRepository)(nil).RemoveFromWishlist), arg0, arg1, arg2)
}

// ViewWishlist mocks base method.
func (m *MockWishlistRepository) ViewWishlist(arg0 context.Context, arg1 int) (model.ViewWishlist, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ViewWishlist", arg0, arg1)
	ret0, _ := ret[0].(model.ViewWishlist)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ViewWishlist indicates an expected call of ViewWishlist.
func (mr *MockWishlistRepositoryMockRecorder) ViewWishlist(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ViewWishlist", reflect.TypeOf((*MockWishlistRepository)(nil).ViewWishlist), arg0, arg1)
}
